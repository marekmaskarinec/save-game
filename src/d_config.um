import ("d_util.um"; "toml.um"; "th.um")

var (
  configData: map[str]interface{} 
  lastTimeGot: int
)

fn reloadSession() {
  if ok, file := d_util.readFileStr("session.toml"); ok {
    result := toml.parse(file)
    if error := result.getError(); error != null {
      printf("TOML ERROR: %s\n", toml.formatError(error, file))
    } else {
      configData = result.data
    }
  }
}

fn probeSessionUpdate(): bool {
  shouldRedo := lastTimeGot == 0 || th.time - lastTimeGot > 1000
  if shouldRedo {
    lastTimeGot = th.time
  }
  return shouldRedo
}

fn getTree*(): map[str]interface{} {
  return configData
}

fn getProperty*(key: str): interface{} {
  if probeSessionUpdate() { reloadSession() }

  return getTree()[key]
}