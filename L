#!/bin/sh
#-*- sh -*-

ARGS=( $@ )
SILENT=""
ISUNITTEST=""
NARG=0
PROG_NAME=$0

# $1 offset
getarg() {
  echo ${ARGS[$NARG + $1]}
}

# $1 test name
target_test() {
  if [ -z "$1" ]; then
    echo -e "What am I gonna test? \n$PROG_NAME test test_name" 
    exit 1
  elif [[ -d "test/$1" && -f "test/$1/main.um" ]]; then 
    ISUNITTEST=$ISUNITTEST TEST_PFX="test/$1/" ../../tophat $SILENT main "test/$1/main.um"
  else
    echo -e "I don't know test \"$1\".\nTests are in ./test directory, you must make a folder named \"$1\" inside it, and put a main.um file in it. That's the way it is!" 
    exit 2
  fi
}

# Compiles external C code
target_compile_extern() {
  cc external/jumbo.c -shared -o src/d_extern.umi
}

hasargs=1

# Fetch all sparse args
while [ $hasargs -eq 1 ]
do
  case `getarg 0` in
    silent)
      NARG=$(( $NARG + 1 ))
      SILENT=silent
    ;; 
    unit)
      NARG=$(( $NARG + 1 ))
      ISUNITTEST="true"
    ;; 
    *)
      hasargs=0
    ;;
  esac
done

target_compile_extern

case `getarg 0` in
  play)
    ../../tophat $SILENT main src/main.um
  ;;
  check)
    ../../tophat $SILENT check main src/main.um
    
    for d in test/*; do
      TEST_PFX="%d/" ../../tophat $SILENT check main "$d/main.um"
    done
  ;;
  testall)
    for d in test/*; do
      echo "Testing ---" `basename $d`
      target_test `basename $d`
    done
  ;;
  test)
    target_test `getarg 1`
  ;;
  *)
    echo "You can do: test, check, play"
    exit 3
  ;;
esac

