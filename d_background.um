import ("rect.um"; "image.um"; "canvas.um"; "th.um"
        "d_util.um")

backgroundOffsets := [4]int{0, 0, 0, 0}
var (
        imgClouds: image.Image
)

fn init*() {
        imgClouds = image.load("data/bg00_sky.png")
}

fn draw*(screen: rect.Rect) {
        canvas.drawRect(0x000000FF, screen)
        imgClouds.draw(d_util.posTrans(backgroundOffsets[0], -30), 0x333333FF)
        imgClouds.draw(d_util.posTrans(backgroundOffsets[0]+320, -30), 0x333333FF)
        imgClouds.draw(d_util.posTrans(backgroundOffsets[1], 0), 0x666666FF)
        imgClouds.draw(d_util.posTrans(backgroundOffsets[1]+320, 0), 0x666666FF)
        imgClouds.draw(d_util.posTrans(backgroundOffsets[2], 30), 0xAAAAAAFF)
        imgClouds.draw(d_util.posTrans(backgroundOffsets[2]+320, 30), 0xAAAAAAFF)
        imgClouds.draw(d_util.posTrans(backgroundOffsets[3], 60))
        imgClouds.draw(d_util.posTrans(backgroundOffsets[3]+320, 60))
        backgroundOffsets[0] -= 1
        backgroundOffsets[1] -= 3
        backgroundOffsets[2] -= 5
        backgroundOffsets[3] -= 10
        for i := 0; i < len(backgroundOffsets); i++ {
                if backgroundOffsets[i] <= -320 {
                        backgroundOffsets[i] = 0;
                }
        }
}
