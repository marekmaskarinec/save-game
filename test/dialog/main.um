import (
        "std.um"; "window.um"; "rect.um"; "th.um"; "canvas.um"; "utf8.um"; "image.um"
        "../../tophat.dat/d_font.um"; "../../tophat.dat/d_util.um"; "../../tophat.dat/d_pfx.um"
)

type (
        Dialog = struct {
                position: th.Vf2
                face: image.Image
                message: str
                messageLen: int
                cursor: int
                appearTimer: real
        }
)

var (
        dialog: Dialog
        mainFont: d_font.Font
        ninepatchImg: image.Image
        boru: image.Image
)

fn setup(message: str, face: image.Image): Dialog {
        return Dialog{face: face, message: message, messageLen: utf8.realLength(message), cursor: 0, appearTimer: 0}
}

fn sliceUtf8(s: str, size: int): str {
        ofs := 0
        for size > 0 && ofs < len(s) {
                rune := utf8.getNextRune(s, ofs)
                ofs += rune.size()
                size -= 1
        }
        return slice(s, 0, ofs)
}

fn (d: ^Dialog) getBox(): rect.Rect {
        boxSize := mainFont.measure(d.message)
        boxSize.x += 16+64
        boxSize.y += 16
        box := rect.Rect{d.position.x, d.position.y, boxSize.x, boxSize.y}
        box.y -= boxSize.y
        return box
}

fn (d: ^Dialog) draw() {
        msg := sliceUtf8(d.message, d.cursor)


        box := d.getBox()

        d_util.drawRectNinepatch(ninepatchImg, rect.Rect{24, 0, 24, 24}, rect.Rect{8, 8, 8, 8}, box)
        if msg != "" {
                mainFont.draw(msg, th.Vf2{box.x+64+16, box.y+8}, th.white)
        }

        d.face.draw(th.Transform{p: th.Vf2{box.x+8, box.y+8}, s: th.Vf2{1, 1}})
}

fn (d: ^Dialog) update() {
        d.appearTimer += th.delta/1000.0;
        for d.appearTimer > 0.1 {
                d.cursor += 1
                d.appearTimer = d.appearTimer - 0.1
        }
}

fn main() {
        window.setup("title", 640, 480)
        screen := rect.mk(0, 0, 640, 480)
        mainFont = d_font.loadFont("data/font_mono.ttf", 16)
        boru = image.load(d_pfx.pfx()+"boru.png")
        boruFace := image.load(d_pfx.pfx()+"boruFACE.png")
        ninepatchImg = image.load(d_pfx.pfx()+"../ninepatch/medium.png")
        dialog := setup(
                "古池や蛙飛び込む水の音\nふるいけやかわずとびこむみずのおと\nThis is a test message\ntest\ntest\ntest\ntest",
                boruFace)
        dialog.position = th.Vf2{60-10, 60+120}

        for window.cycle(screen) {
                canvas.drawRect(th.black, rect.Rect{0, 0, 640, 640})
                boru.draw(th.Transform{p: th.Vf2{60-10, 60+120}, s: th.Vf2{1, 1}})
                dialog.update()
                dialog.draw()
        }
}
