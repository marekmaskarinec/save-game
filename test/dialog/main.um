import (
        "std.um"; "window.um"; "rect.um"; "image.um"; "canvas.um"; "th.um"; "input.um"
        "../../tophat.dat/d_pfx.um"; "../../tophat.dat/d_font.um"; "../../tophat.dat/d_dialog.um"
)

const (
        maxDlgs = 3
        message = "古池や蛙飛び込む水の音\nふるいけやかわずとびこむみずのおと\nThis is a test message\ntest\ntest\ntest\ntest"
)

fn setupDlg1(): d_dialog.Dialog {
        dialogMessage      := message
        dialogSpeed        := 0.2
        dialogFgColor      := 0xFFFFFFFF
        dialogFont         := d_font.loadFont("data/font_mono.ttf", 16)
        dialogFace         := image.load(d_pfx.pfx()+"boruFACE.png")
        dialogSprite       := image.load(d_pfx.pfx()+"../ninepatch/medium.png")
        dialogSpriteOffset := th.Vf2{0, 0}

        return d_dialog.setup(dialogMessage, dialogSpeed, dialogFace, dialogSprite, dialogSpriteOffset, dialogFgColor, dialogFont) 
}

fn setupDlg2(): d_dialog.Dialog {
        dialogMessage      := message
        dialogSpeed        := 0.1
        dialogFgColor      := 0xFFFFEEFF
        dialogFont         := d_font.loadFont("data/font_mono.ttf", 16)
        dialogFace         := image.load(d_pfx.pfx()+"boruFACE.png")
        dialogSprite       := image.load(d_pfx.pfx()+"../ninepatch/medium.png")
        dialogSpriteOffset := th.Vf2{24, 0}

        return d_dialog.setup(dialogMessage, dialogSpeed, dialogFace, dialogSprite, dialogSpriteOffset, dialogFgColor, dialogFont) 
}

fn setupDlg3(): d_dialog.Dialog {
        dialogMessage      := message
        dialogSpeed        := 0.05
        dialogFgColor      := 0xAAAA22FF
        dialogFont         := d_font.loadFont("data/font_mono.ttf", 16)
        dialogFace         := image.load(d_pfx.pfx()+"boruFACE.png")
        dialogSprite       := image.load(d_pfx.pfx()+"../ninepatch/medium.png")
        dialogSpriteOffset := th.Vf2{48, 0}

        return d_dialog.setup(dialogMessage, dialogSpeed, dialogFace, dialogSprite, dialogSpriteOffset, dialogFgColor, dialogFont) 
}

fn main() {
        window.setup("title", 640, 480)
        screen := rect.mk(0, 0, 640, 480)
        dlg := setupDlg1()
        cdlg := 0

        for window.cycle(screen) {
                if input.isJustPressed(input.mouse1) {
                        cdlg += 1
                        if cdlg >= maxDlgs {
                                cdlg = 0
                        }

                        switch cdlg {
                        case 0: dlg = setupDlg1()
                        case 1: dlg = setupDlg2()
                        case 2: dlg = setupDlg3()
                        }
                }

                canvas.drawRect(th.white, rect.mk(0, 0, 640, 480))

                dlg.position = input.getMousePos()
                dlg.update()
                dlg.draw()

                canvas.drawText(std.itoa(cdlg), th.Vf2{2, 2}, th.black, 2)
        }
}



