fn isSpace(ch: char): bool {
  return ch == '\n' || ch == '\t' || ch == ' '
}

fn trim*(s: str): str {
  if s == "" {
    return ""
  }
  start := 0
  end := len(s)-1

  for isSpace(s[start]) {
    start++
  }
  
  for end > start && isSpace(s[end]) {
    end--
  }
  
  return slice(s, start, end+1)
}

fn join*(strl: []str): str {
  result := ""
  for i, s in strl {
    result += s
  }
  return result
}

// inserts string `sub` at the end of every string in array except for last
fn intersperse*(strl: []str, sub: str): []str {
  newl := copy(strl)

  for i := 0; i < len(newl)-1; i++ {
    newl[i] += sub
  }

  return newl
}

fn splitBy*(text: str, by: char): []str {
  items := []str{}
  last := 0
  for i, c in text {
    if c == by {
      items = append(items, slice(text, last, i))
      last = i+1 // Skip the character by adding one.
    }
  }
  items = append(items, slice(text, last))
  return items
}

fn separateChar*(words: []str, c: char): []str {
  result := []str{}
  for i, word in words {
    lines := splitBy(words[i], c)
    for i, line in lines {
      if i != 0 {
        result = append(result, c)
      }
      result = append(result, line)
    }
  }
  return result
}
